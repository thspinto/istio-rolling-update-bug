---
# Source: nginx/templates/vhost.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: test
  labels:
    app: test
    chart: "nginx-0.6.1"
    release: "test"
    heritage: "Tiller"
data:
  default.conf: |-
    server {
      listen 8080;
    
      location /healthcheck {
        return 200 'ok';
      }
    }
---
# Source: nginx/templates/svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: test
  labels:
    app: test
    chart: "nginx-0.6.1"
    release: "test"
    heritage: "Tiller"
spec:
  ports:
  - name: http
    port: 80
    targetPort: http
  selector:
    app: test

---
# Source: nginx/templates/deployment.yaml
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: test
  labels:
    app: test
    chart: "nginx-0.6.1"
    release: "test"
    heritage: "Tiller"
spec:
  replicas: 2
  template:
    metadata:
      labels:
        app: test
        chart: "nginx-0.6.1"
        release: "test"
        heritage: "Tiller"
    spec:
      containers:
      - name: test
        image: "docker.io/nginx:1.15-alpine"
        imagePullPolicy: "IfNotPresent"
        ports:
        - name: http
          containerPort: 8080
        livenessProbe:
          httpGet:
            path: /healthcheck
            port: http
          initialDelaySeconds: 30
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /healthcheck
            port: http
          initialDelaySeconds: 5
          timeoutSeconds: 3
          periodSeconds: 5
        volumeMounts:
        - name: nginx-vhost
          mountPath: /etc/nginx/conf.d/
      volumes:
      - name: nginx-vhost
        configMap:
          name: test

---
# Source: nginx/templates/istio-auth.yaml
apiVersion: "authentication.istio.io/v1alpha1"
kind: "Policy"
metadata:
  name: test-permissive
spec:
  targets:
  - name: test
  peers:
  - mtls:
      mode: PERMISSIVE

---
# Source: nginx/templates/pdb.yaml

apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  name: test
  labels:
    app: test
    chart: "nginx-0.6.1"
    release: "test"
    heritage: "Tiller"
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app: test
      release: test
---
# Source: nginx/templates/istio.yaml
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: test
spec:
  hosts:
  - test.example.com
  - test
  gateways:
  - gateway
  - mesh
  http:
  - route:
    - destination:
        host: test
        port:
          number: 80
---
apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  name: gateway
spec:
  selector:
    istio: ingressgateway
  servers:
  - port:
      number: 80
      name: http
      protocol: HTTP
    hosts:
    - "*" # required for httpsRedirect to work
